package com.mobdeve.s20.group.one.mco2

import android.os.Bundle
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import com.mobdeve.s20.group.one.mco2.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {

    // ViewBinder class is generated by view binder
    private lateinit var binding: ActivityMainBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Binder is generated in build step.
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root) // Set contentView from the generated binding class.

        // Tests to access the elements present in the activity_main.xml
//        var testString = binding.helloWorldTv.text.toString()
//        Log.d("testString", testString)

        // Definition of fragments
        val timerFragment = TimerFragment()     // Responsible for the timer logic
        val journalFragment = JournalFragment() // Responsible for the journal logic
        val taskFragment = TaskFragment()       // Responsible for the task logic
        val otherFragment = OtherFragment()     // Idk what to put here, probably where you can view the statistics or something
                                                // Refer to MCO1 project proposal

        // Sets the first fragment the user will see
        setCurrentFragment(timerFragment)

        // Bottom navigation bar controls
        binding.bottomNavigationView.setOnItemSelectedListener {
            when(it.itemId){
                R.id.miTimer -> setCurrentFragment(timerFragment)
                R.id.miJournal -> setCurrentFragment(journalFragment)
                R.id.miTask -> setCurrentFragment(taskFragment)
                R.id.miOther -> setCurrentFragment(otherFragment)
            }
            true
        }

    }


    // Function to switch between fragments
    private fun setCurrentFragment(fragment: Fragment) {
        Log.d("MainActivity", "Switching to fragment: ${fragment.javaClass.simpleName}")
        supportFragmentManager.beginTransaction().apply {
            replace(binding.flFragment.id, fragment)
            commit()
        }
    }
}